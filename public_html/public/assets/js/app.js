"use strict";function Auth(e,t,o){var n={};return n.login=function(t,n){return e.post("/api/login",{username:t,password:n}).success(function(e){return o.setToken(e.token),e})},n.logout=function(){o.setToken()},n.isLoggedIn=function(){return o.getToken()?!0:!1},n.getUser=function(){return o.getToken()?e.get("/api/me",{cache:!0}):t.reject({succcess:!1,message:"User has no token."})},n}function AuthToken(e){var t={};return t.getToken=function(){return e.localStorage.getItem("token")},t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token")},t}function AuthInterceptor(e,t,o){var n={};return n.request=function(e){var t=o.getToken();return t&&(e.headers["x-access-token"]=t),e},n.responseError=function(n){return 403===n.status&&(o.setToken(),t.path("/login")),e.reject(n)},n}function HomeCtrl(){var e=this;e.processing=!0}function MainCtrl(e,t,o,n){var r=this;r.isLoggedIn=n.isLoggedIn(),e.$on("$routeChangeStart",function(){r.isLoggedIn=n.isLoggedIn(),n.getUser().then(function(e){r.user=e.data},function(e){console.log("error rootScope on $routeChangeStart:",e)})}),r.doLogin=function(){r.processing=!0,r.error="",n.login(r.loginData.username,r.loginData.password).success(function(e){r.processing=!1,e.success?t.path("/home"):r.error=e.message})},r.doLogout=function(){n.logout(),r.user="",t.path("/login"),o.get("$http").remove("/api/me")},r.reset=function(e){r.error="",e&&(e.$setPristine(),e.$setUntouched()),r.loginData={}}}var ngApp=angular.module("ldap",["ngAnimate","ngRoute","appControllers","appServices"]),appControllers=angular.module("appControllers",[]),appServices=angular.module("appServices",[]);ngApp.config(["$routeProvider","$locationProvider","$httpProvider",function(e,t,o){e.when("/",{templateUrl:"app/views/home.html"}).when("/login",{templateUrl:"app/views/login.html",controller:"MainCtrl",controllerAs:"login"}).when("/home",{templateUrl:"app/views/home.html",controller:"HomeCtrl",controllerAs:"home"}),t.html5Mode(!0),o.interceptors.push("AuthInterceptor")}]),appServices.factory("Auth",Auth),appServices.factory("AuthToken",AuthToken),appServices.factory("AuthInterceptor",AuthInterceptor),Auth.$inject=["$http","$q","AuthToken"],AuthToken.$inject=["$window"],AuthInterceptor.$inject=["$q","$location","AuthToken"],appControllers.controller("HomeCtrl",HomeCtrl),appControllers.controller("MainCtrl",MainCtrl),MainCtrl.$inject=["$rootScope","$location","$cacheFactory","Auth"];
//# sourceMappingURL=app.js.map