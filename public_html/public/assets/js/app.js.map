{"version":3,"sources":["app.js","services/authService.js","controllers/homeCtrl.js","controllers/mainCtrl.js","config/routes.js"],"names":["Auth","$http","$q","AuthToken","authFactory","login","username","password","post","success","data","setToken","token","logout","isLoggedIn","getToken","getUser","get","cache","reject","succcess","message","$window","authTokenFactory","localStorage","getItem","setItem","removeItem","AuthInterceptor","$location","interceptorFactory","request","config","headers","responseError","res","status","path","HomeCtrl","vm","this","processing","MainCtrl","$rootScope","$cacheFactory","$on","then","user","error","console","log","doLogin","loginData","doLogout","remove","reset","form","$setPristine","$setUntouched","ngApp","angular","module","appControllers","appServices","$routeProvider","$locationProvider","$httpProvider","when","templateUrl","controller","controllerAs","html5Mode","interceptors","push","factory","$inject"],"mappings":"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","file":"app.js","sourcesContent":["// Miroslav Georgiev\n'use strict';\n\nvar ngApp = angular.module('ldap', [\n    'ngAnimate',\n    'ngRoute',\n    'appControllers',\n    'appServices'\n]);\n\nvar appControllers = angular.module('appControllers', []);\nvar appServices = angular.module('appServices', []);","// Miroslav Georgiev\n'use strict';\n\nappServices.factory('Auth', Auth);\nappServices.factory('AuthToken', AuthToken);\nappServices.factory('AuthInterceptor', AuthInterceptor);\n\nfunction Auth($http, $q, AuthToken) {\n    var authFactory = {};\n    \n    authFactory.login = function (username, password) {\n        return $http.post('/api/login', {username: username, password: password}).success(function (data) {\n            AuthToken.setToken(data.token);\n            return data;\n        });\n    };\n    \n    authFactory.logout = function () {\n        AuthToken.setToken();\n    };\n    \n    authFactory.isLoggedIn = function () {\n        if (AuthToken.getToken())\n            return true;\n        else\n            return false;\n    };\n    \n    authFactory.getUser = function () {\n        if (AuthToken.getToken())\n            return $http.get('/api/me', {cache: true});\n        else\n            return $q.reject({succcess: false, message: 'User has no token.'});\n    };\n    \n    return authFactory;\n}\n\nfunction AuthToken($window) {\n    var authTokenFactory = {};\n    \n    authTokenFactory.getToken = function () {\n        return $window.localStorage.getItem('token');\n    };\n    \n    authTokenFactory.setToken = function (token) {\n        if (token)\n            $window.localStorage.setItem('token', token);\n        else\n            $window.localStorage.removeItem('token');\n    };\n    \n    return authTokenFactory;\n}\n\nfunction AuthInterceptor($q, $location, AuthToken) {\n    var interceptorFactory = {};\n    \n    interceptorFactory.request = function (config) {\n        var token = AuthToken.getToken();\n        \n        if (token)\n            config.headers['x-access-token'] = token;\n        \n        return config;\n    };\n    \n    interceptorFactory.responseError = function (res) {\n        if (res.status === 403) {\n            AuthToken.setToken();\n            $location.path('/login');\n        }\n        \n        return $q.reject(res);\n    };\n    \n    return interceptorFactory;\n}","// Miroslav Georgiev\n'use strict';\n\nappControllers.controller('HomeCtrl', HomeCtrl);\n\nfunction HomeCtrl () {\n    var vm = this;\n    vm.processing = true;\n}","// Miroslav Georgiev\n'use strict';\n\nappControllers.controller('MainCtrl', MainCtrl);\n\nfunction MainCtrl ($rootScope, $location, $cacheFactory, Auth) {\n    var vm = this;\n\n    // get info if a user is logged in\n    vm.isLoggedIn = Auth.isLoggedIn();\n    \n    // check if the user is logged in on every request\n    $rootScope.$on('$routeChangeStart', function () {\n        vm.isLoggedIn = Auth.isLoggedIn();\n        Auth.getUser().then(function (data) {\n            vm.user = data.data;\n        }, function (error) {\n            console.log('error rootScope on $routeChangeStart:', error);\n        });\n    });\n\n    // perform login\n    vm.doLogin = function () {\n        vm.processing = true;\n        vm.error = '';\n        \n        Auth.login(vm.loginData.username, vm.loginData.password).success(function (data) {\n            vm.processing = false;\n            if (data.success)\n                $location.path('/home');\n            else\n                vm.error = data.message;\n        });\n    };\n\n    // perform logout\n    vm.doLogout = function () {\n        Auth.logout();\n        vm.user = '';\n        $location.path('/login');\n        $cacheFactory.get('$http').remove('/api/me');\n    };\n    \n    // peform form reset\n    vm.reset = function (form) {\n        vm.error = '';\n        if (form) {\n            form.$setPristine();\n            form.$setUntouched();\n        }\n        vm.loginData = {};\n    };\n}","// Miroslav Georgiev\n'use strict';\n\nngApp.config(function ($routeProvider, $locationProvider, $httpProvider) {\n    $routeProvider\n            .when('/', {\n                templateUrl: 'app/views/home.html'\n            })\n            .when('/login', {\n                templateUrl: 'app/views/login.html',\n                controller: 'MainCtrl',\n                controllerAs: 'login'\n            })\n            .when('/home', {\n                templateUrl: 'app/views/home.html',\n                controller: 'HomeCtrl',\n                controllerAs: 'home'\n            });\n\n    // set our app up to have pretty URLS\n    $locationProvider.html5Mode(true);\n\n    // attach the auth interceptor to the http requests\n    $httpProvider.interceptors.push('AuthInterceptor');\n});"],"sourceRoot":"/source/"}